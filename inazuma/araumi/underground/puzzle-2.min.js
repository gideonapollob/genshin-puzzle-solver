const solve=function(r,n){var t=" must be a 5-character string using the characters A to D. Example: AABCA, BDCBB, etc.",e=" must only use the characters A to D. Example: AABCA, BDCBB, etc.";if("string"!=typeof r)return"[Current Pattern]"+t;if(5!=r.length)return"[Current Pattern]"+t;let l;const a=/[^A-D]/;if(r=r.toUpperCase(),null!==(l=a.exec(r)))return"[Current Pattern]"+e;if("string"!=typeof n)return"[Target Pattern]"+t;if(5!=n.length)return"[Target Pattern]"+t;if(n=n.toUpperCase(),null!==(l=a.exec(n)))return"[Target Pattern]"+e;if(r==n)return"The [Current Pattern] is already solved.";String.prototype.replaceAt=function(t,e){return this.substr(0,t)+e+this.substr(t+e.length)};let o=[];var s=function(t){var e=t.length;let r=[t.slice()],n=new Array(e).fill(0),l=1,a,u;for(;l<e;)n[l]<l?(a=l%2&&n[l],u=t[l],t[l]=t[a],t[a]=u,n[l]++,l=1,r.push(t.slice())):(n[l]=0,l++);return r}([1,2,3,4,5]),h=[[0,2],[0,1,2],[0,2,4],[2,3,4],[2,4]];for(let e=0;e<s.length;e++){let u={pattern:[]},i=s[e],f=[];function g(t){let e=u[t];null==e&&(e=[]);function r(t,e){for(var r in e)t=t.replaceAt(e[r],(n=t[e[r]],c.indexOf(n)==c.length-1?c[0]:c[c.indexOf(n)+1]));var n;return t}for(var n in i){var l=r(l=t,h[i[n]-1]);if(!e.includes(l)){e.push(l),u[t]=e;var a=parseInt(i[n]);return f.push(a),l}}}var c="ABCD";let t=r;for(;t!=n;)t=g(t);if(f=function(a){for(let l=0;l<a.length-c.length+1;l++){let n=!1;for(let r=1;r<=a.length/c.length;r++){for(let e=0;e<r;e++){for(let t=1;t<c.length;t++){var u=l+r*t+e;if(a[l+e]!=a[u]){n=!1;break}n=!0}if(!n)break}n&&(a.splice(l,c.length*r),l=-1)}}return a}(f),0<o.length){let t=!1;for(var p in o)if(o[p].length>f.length){t=!0;break}t&&(o=[])}null==o.find(function(e){if(f.length==e.length){for(let t=0;t<f.length;t++)if(f[t]!=e[t])return!1;return!0}})&&o.push(f)}return o};